{
	"Boilerplate": {
		"prefix": "!make_docker_image",
		"body": [
			"REGISTRY_NAME := ",
			"REPOSITORY_NAME := DefaultRepo/",
			"IMAGE_NAME := MyDockerImage",
			"TAG := :latest\n",
			"# Run Options",
			"RUN_PORTS := -p 80:80\n",
			"PLATFORMS := linux/amd64,linux/arm64,linux/arm/v7\n",
			"getcommitid:",
			"\t$(eval COMMITID = $(shell git log -1 --pretty=format:'%H'))\n",
			"getbranchname:",
			"\t$(eval BRANCH_NAME = $(shell (git branch --show-current ) -replace '/','.'))\n",
			"build: getcommitid getbranchname",
			"\tdocker build -t $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG) -t $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME):$(BRANCH_NAME) -t $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME):$(BRANCH_NAME)_$(COMMITID) .\n",
			"build_multiarch:",
			"\tdocker buildx build -t $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG) --platform $(PLATFORMS) .\n",
			"run:",
			"\tdocker run -d $(RUN_PORTS) $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG)\n",
			"run_it:",
			"\tdocker run -it -d $(RUN_PORTS) $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG)\n",
			"package:",
			"\t$$$PackageFileName = \"$$(\"$(IMAGE_NAME)\" -replace \"/\",\"_\").tar\"; docker save $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG) -o $$$PackageFileName\n",
			"size:",
			"\tdocker inspect -f \"{{ .Size }}\" $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG)",
			"\tdocker history $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG)\n",
			"publish:",
			"\tdocker login; docker push $(REGISTRY_NAME)$(REPOSITORY_NAME)$(IMAGE_NAME)$(TAG); docker logout"
		],
		"description": "Create an boilerplate b_docker Makefile"
	}
}